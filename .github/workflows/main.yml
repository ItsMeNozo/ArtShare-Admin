name: ARTSHARE ADMIN CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
  VITE_BE_URL: ${{ secrets.VITE_BE_URL }}
  VITE_S3_BUCKET_URL: ${{ secrets.VITE_S3_BUCKET_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

  test-and-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install


      - name: Install Qlty CLI
        uses: qltysh/qlty-action/install@main

      - name: Initialize Qlty configuration
        run: qlty init

      - name: Run Qlty quality checks
        run: |
          qlty check --reporter github-pr-review
          qlty fmt --diff-only --fail-on-change

      - name: Upload coverage to Qlty
        uses: qltysh/qlty-action/coverage@main
        with:
          files: coverage/lcov.info
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build, test-and-quality]
  #   if: success()
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #
  #     - name: Install dependencies
  #       run: npm install
  #
  #     - name: Build the app
  #       run: npm run build
  #
  #     - name: Vercel CLI - Deploy
  #       uses: amondnet/vercel-action@v21
  #       with:
  #         vercel_token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel_team_id: ${{ secrets.VERCEL_TEAM_ID }}
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}